{"mappings":"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","sources":["src/apiServer.js","src/index.js"],"sourcesContent":["const HTTP = 'http://localhost:3000/students';\n\nexport async function getStudent() {\n    const result = await fetch(`${HTTP}`)\n    const student = await result.json()\n    return student\n}\n\nconst studentToAdd = {\n    \"name\": \"Marko Husyanicya\",\n    \"age\": 15,\n    \"course\": \"FrontEnd\",\n    \"skills\": [\"Networking\", \"Ethical Hacking\", \"Linux\"],\n    \"email\": \"mgusanica@gmail.com\",\n    \"isEnrolled\": true\n}\n\nexport async function postStudent(newStudent) {\n    const options = {\n        method: 'POST',\n        body: JSON.stringify(newStudent),\n        headers: {\n        \"Content-Type\": \"application/json; charset=UTF-8\",\n        },\n    }\n\n    const result = await fetch(`${HTTP}`, options)\n    const student = await result.json()\n    return student\n}\n\n// postStudent(studentToAdd)\n\nexport async function deleteStudent(id){\n    const options = {\n        method: 'DELETE',\n    }\n\n    const result = await fetch(`${HTTP}/${id}`, options)\n    const student = await result.json()\n    return student\n}\n\n// deleteStudent(\"8947\")\n\n\n\nexport async function patchStudent(id, studentUpdate){\n    const options={\n        method: 'PATCH',\n        body: JSON.stringify(studentUpdate),\n        headers: {\n        \"Content-Type\": \"application/json; charset=UTF-8\",\n        },\n    }\n\n    const result = await fetch(`${HTTP}/${id}`, options)\n    const student = await result.json()\n    return student\n}\n","import {getStudent} from './apiServer'\nimport {postStudent} from './apiServer'\nimport {deleteStudent} from './apiServer'\nimport {patchStudent} from './apiServer'\n\nconst HTTP = 'http://localhost:3000/students';\n\nconst list = document.querySelector('.student-list')\nconst btnStudent = document.querySelector('.student-btn')\nconst form = document.querySelector('form')\n\n// Елементи для модального вікна оновлення\nconst modal = document.getElementById(\"updateModal\");\nconst closeModal = document.querySelector(\".close\");\nconst updateForm = document.getElementById(\"updateForm\");\n\nlet currentStudentId = null;  // Зберігаємо ID студента, якого оновлюємо\n\nform.addEventListener('submit', onSubmit)\n\nbtnStudent.addEventListener('click', () => {\n    getStudent().then(students => {\n        const addStudent = studentList(students)\n        list.innerHTML = '';  // Очищуємо список перед новим рендером\n        list.insertAdjacentHTML('beforeend', addStudent);\n        attachHandlers();  // Додаємо обробники для кнопок видалення та оновлення\n    })\n})\n\nfunction onSubmit(event) {\n    event.preventDefault()\n\n    const formEl = event.currentTarget.elements\n    const newStudent = {\n      name: formEl.name.value,\n      age: formEl.age.value,\n      course: formEl.course.value,\n      skills: [formEl.skills.value],\n      email: formEl.email.value,\n      isEnrolled: formEl.isEnrolled.checked\n    }\n    postStudent(newStudent).then(() => {\n        alert('Студента додано');\n        btnStudent.click(); // Оновлюємо список студентів після додавання\n    });\n    event.currentTarget.reset();\n}\n\nfunction studentList(addList) {\n    return addList.map((student) => {\n        return `\n        <li data-id=\"${student.id}\">\n            <h1>Ім'я: ${student.name}</h1>\n            <p>Вік: ${student.age}</p>\n            <p>Курс: ${student.course}</p>\n            <p>Скіли: ${student.skills}</p>\n            <p>Email: ${student.email}</p>\n            <p>Зараховано: ${student.isEnrolled}</p>\n            <button class=\"student-delete\">Видалити студента</button>\n            <button class=\"student-update\">Оновити студента</button>\n        </li>\n        `\n    }).join('');\n}\n\nfunction attachHandlers() {\n    document.querySelectorAll('.student-delete').forEach(button => {\n        button.addEventListener('click', onDeleteStudent);\n    });\n    document.querySelectorAll('.student-update').forEach(button => {\n        button.addEventListener('click', onUpdateStudent);\n    });\n}\n\nfunction onDeleteStudent(event) {\n    const studentElement = event.target.closest('li');\n    const studentId = studentElement.dataset.id;\n\n    deleteStudent(studentId).then(() => {\n        alert('Студента видалено');\n        studentElement.remove(); \n    });\n}\n\nfunction onUpdateStudent(event) {\n    const studentElement = event.target.closest('li');\n    currentStudentId = studentElement.dataset.id;\n\n    const student = {\n        name: studentElement.querySelector('h1').textContent.replace(\"Ім'я: \", \"\"),\n        age: studentElement.querySelector('p:nth-of-type(1)').textContent.replace(\"Вік: \", \"\"),\n        course: studentElement.querySelector('p:nth-of-type(2)').textContent.replace(\"Курс: \", \"\"),\n        skills: studentElement.querySelector('p:nth-of-type(3)').textContent.replace(\"Скіли: \", \"\"),\n        email: studentElement.querySelector('p:nth-of-type(4)').textContent.replace(\"Email: \", \"\"),\n        isEnrolled: studentElement.querySelector('p:nth-of-type(5)').textContent.includes('true')\n    };\n\n    updateForm.name.value = student.name;\n    updateForm.age.value = student.age;\n    updateForm.course.value = student.course;\n    updateForm.skills.value = student.skills;\n    updateForm.email.value = student.email;\n    updateForm.isEnrolled.checked = student.isEnrolled;\n\n    modal.style.display = \"block\";  \n}\n\n\ncloseModal.onclick = () => { modal.style.display = \"none\"; };\n\nupdateForm.addEventListener('submit', (event) => {\n    event.preventDefault();\n\n    const updatedStudent = {\n        name: updateForm.name.value,\n        age: updateForm.age.value,\n        course: updateForm.course.value,\n        skills: updateForm.skills.value.split(','), \n        email: updateForm.email.value,\n        isEnrolled: updateForm.isEnrolled.checked\n    };\n\n    patchStudent(currentStudentId, updatedStudent).then(() => {\n        alert('Дані студента оновлено');\n        modal.style.display = \"none\"; \n        btnStudent.click();\n    });\n});\n\nwindow.onclick = (event) => {\n    if (event.target == modal) {\n        modal.style.display = \"none\";\n    }\n}"],"names":["async","$542a1f61e5e0ceed$export$b1802446e2b6a495","result","fetch","json","$542a1f61e5e0ceed$export$9a0f833f93c61322","newStudent","options","method","body","JSON","stringify","headers","$542a1f61e5e0ceed$export$3a8629131ae87772","id","$542a1f61e5e0ceed$export$a27771629a6bddcc","studentUpdate","$1f0dc3b9307be026$var$list","document","querySelector","$1f0dc3b9307be026$var$btnStudent","$1f0dc3b9307be026$var$form","$1f0dc3b9307be026$var$modal","getElementById","$1f0dc3b9307be026$var$closeModal","$1f0dc3b9307be026$var$updateForm","$1f0dc3b9307be026$var$currentStudentId","$1f0dc3b9307be026$var$onDeleteStudent","event","studentElement","target","closest","dataset","then","alert","remove","$1f0dc3b9307be026$var$onUpdateStudent","student","name","textContent","replace","age","course","skills","email","isEnrolled","includes","value","checked","style","display","addEventListener","preventDefault","formEl","currentTarget","elements","click","reset","students","addStudent","map","join","innerHTML","insertAdjacentHTML","querySelectorAll","forEach","button","onclick","updatedStudent","split","window"],"version":3,"file":"index.cb503d10.js.map"}